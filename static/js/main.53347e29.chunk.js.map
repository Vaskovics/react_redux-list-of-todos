{"version":3,"sources":["types/FilterBy.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterBy","actions","todo","type","payload","currentTodoReducer","state","action","query","status","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","visibleTodos","title","toLocaleLowerCase","includes","completed","length","className","map","id","classNames","onClick","currentTodoActions","addTodo","TodoFilter","dispach","onSubmit","event","preventDefault","onChange","filterActions","target","value","all","active","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","isLoading","setIsLoading","user","setUser","useEffect","fetchData","a","userId","loadedUser","href","email","name","App","todosFromServer","todoActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53347e29.chunk.js","sourcesContent":["export enum FilterBy {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetFilterQuery = {\n  type: 'filterQuery/SET',\n  payload: string,\n};\n\ntype SetFilterStatus = {\n  type: 'filterStatus/SET',\n  payload: Status,\n};\n\nconst setQuery = (query: string): SetFilterQuery => ({\n  type: 'filterQuery/SET',\n  payload: query,\n});\n\nconst setFilter = (status: Status): SetFilterStatus => ({\n  type: 'filterStatus/SET',\n  payload: status,\n});\n\ntype Action = SetFilterQuery | SetFilterStatus;\n\nexport const actions = {\n  setQuery,\n  setFilter,\n};\n\nexport type State = {\n  query: string,\n  status: Status,\n};\n\nconst filterReducer = (\n  state: State = {\n    query: '',\n    status: 'all',\n  },\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'filterQuery/SET':\n      return {\n        ...state,\n        query: action.payload,\n      };\n\n    case 'filterStatus/SET':\n      return {\n        ...state,\n        status: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport { Todo } from '../types/Todo';\n\ntype SetTodosActions = { type: 'todos/SET', payload: Todo[] };\n\nconst setTodos = (todos: Todo[]): SetTodosActions => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\ntype Actions = SetTodosActions;\n\nconst todosReducer = (\n  state: Todo[] = [],\n  actions: Actions,\n): Todo[] => {\n  switch (actions.type) {\n    case 'todos/SET':\n      return actions.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport classNames from 'classnames';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { Todo } from '../../types/Todo';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useDispatch();\n  const todos = useAppSelector(state => state.todos);\n  const filter = useAppSelector(state => state.filter);\n\n  let visibleTodos = todos.filter(todo => (\n    todo.title.toLocaleLowerCase().includes(filter.query.toLocaleLowerCase())\n  ));\n\n  const addTodo = (todo: Todo) => {\n    dispatch(currentTodoActions.setTodo(todo));\n  };\n\n  switch (filter.status) {\n    case 'active':\n      visibleTodos = visibleTodos.filter(todo => !todo.completed);\n      break;\n\n    case 'completed':\n      visibleTodos = visibleTodos.filter(todo => todo.completed);\n      break;\n\n    default:\n      break;\n  }\n\n  return (\n    <>\n      {visibleTodos.length === 0 ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span\n                  className=\"icon\"\n                >\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {visibleTodos.map(todo => (\n              <tr data-cy=\"todo\" key={todo.id}>\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n\n                <td className=\"is-vcentered is-expanded\">\n                  <p\n                    className={classNames(\n                      {\n                        'has-text-danger': !todo.completed,\n                        'has-text-success': todo.completed,\n                      },\n                    )}\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => addTodo(todo)}\n                  >\n                    <span\n                      className=\"icon\"\n                      data-cy=\"iconCompleted\"\n                    >\n                      <i\n                        className=\"far fa-eye\"\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import { ChangeEvent } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { FilterBy } from '../../types/FilterBy';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispach = useAppDispatch();\n  const filter = useAppSelector(state => state.filter);\n\n  const handleSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    dispach(filterActions.setFilter(event.target.value as Status));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelect}\n          >\n            <option value={FilterBy.all}>All</option>\n            <option value={FilterBy.active}>Active</option>\n            <option value={FilterBy.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filter.query}\n          onChange={(event) => {\n            dispach(filterActions.setQuery(event.target.value));\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => dispach(filterActions.setQuery(''))}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Loader } from '../Loader';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { useAppSelector } from '../../app/hooks';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (currentTodo?.userId) {\n        const loadedUser = await getUser(currentTodo?.userId);\n\n        setUser(loadedUser);\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const removeTodo = () => {\n    dispatch(currentTodoActions.removeTodo());\n  };\n\n  return (\n    <>\n      <div className=\"modal is-active\" data-cy=\"modal\">\n        <div className=\"modal-background\" />\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {currentTodo?.id}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={removeTodo}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p\n                className=\"block\"\n                data-cy=\"modal-title\"\n              >\n                {currentTodo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {currentTodo?.completed\n                  ? (\n                    <strong className=\"has-text-success\">Done</strong>\n                  ) : (\n                    <strong className=\"has-text-danger\">Planned</strong>\n                  )}\n                {' by '}\n                <a href={user?.email}>{user?.name}</a>\n              </p>\n            </div>\n          </div>\n        )}\n\n      </div>\n    </>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions as todoActions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        dispatch(todoActions.setTodos(todosFromServer));\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && (<Loader />)}\n              <TodoList />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}